;(function (window) {
  if (window.VueDemi) {
    return
  }
  var VueDemi = {}
  var Vue = window.Vue
  if (Vue) {
    if (Vue.version.slice(0, 2) === '2.') {
      var VueCompositionAPI = window.VueCompositionAPI
      if (VueCompositionAPI) {
        for (var key in VueCompositionAPI) {
          VueDemi[key] = VueCompositionAPI[key]
        }
        VueDemi.isVue2 = true
        VueDemi.isVue3 = false
        VueDemi.install = function (){}
        VueDemi.Vue = Vue
        VueDemi.Vue2 = Vue
        VueDemi.version = Vue.version
      } else {
        console.error(
          '[vue-demi] no VueCompositionAPI instance found, please be sure to import `@vue/composition-api` before `vue-demi`.'
        )
      }
    } else if (Vue.version.slice(0, 2) === '3.') {
      for (var key in Vue) {
        VueDemi[key] = Vue[key]
      }
      VueDemi.isVue2 = false
      VueDemi.isVue3 = true
      VueDemi.install = function (){}
      VueDemi.Vue = Vue
      VueDemi.Vue2 = undefined
      VueDemi.version = Vue.version
      VueDemi.set = function(target, key, val) {
        if (Array.isArray(target)) {
          target.length = Math.max(target.length, key)
          target.splice(key, 1, val)
          return val
        }
        target[key] = val
        return val
      }
      VueDemi.del = function(target, key) {
        if (Array.isArray(target)) {
          target.splice(key, 1)
          return
        }
        delete target[key]
      }
    } else {
      console.error('[vue-demi] Vue version ' + Vue.version + ' is unsupported.')
    }
  } else {
    console.error(
      '[vue-demi] no Vue instance found, please be sure to import `vue` before `vue-demi`.'
    )
  }
  window.VueDemi = VueDemi
})(window)
;
;(function (exports, Fuse, vueDemi) {
  'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var Fuse__default = /*#__PURE__*/_interopDefaultLegacy(Fuse);

  function useFuse(search, data, options) {
    var _a;
    const createFuse = (data2, options2) => {
      var _a2;
      const _options = options2;
      return new Fuse__default["default"]((_a2 = vueDemi.unref(data2)) != null ? _a2 : [], _options);
    };
    const fuse = vueDemi.ref(createFuse(data, (_a = vueDemi.unref(options)) == null ? void 0 : _a.fuseOptions));
    vueDemi.watch(() => {
      var _a2;
      return (_a2 = vueDemi.unref(options)) == null ? void 0 : _a2.fuseOptions;
    }, (newOptions) => {
      fuse.value = createFuse(data, newOptions);
    }, { deep: true });
    vueDemi.watch(() => vueDemi.unref(data), (newData) => {
      fuse.value.setCollection(newData);
    }, { deep: true });
    const results = vueDemi.computed(() => {
      var _a2, _b;
      if (((_a2 = vueDemi.unref(options)) == null ? void 0 : _a2.matchAllWhenSearchEmpty) && !vueDemi.unref(search))
        return vueDemi.unref(data).map((item, index) => ({ item, refIndex: index }));
      const limit = (_b = vueDemi.unref(options)) == null ? void 0 : _b.resultLimit;
      return fuse.value.search(vueDemi.unref(search), limit ? { limit } : void 0);
    });
    return {
      results
    };
  }

  exports.useFuse = useFuse;

  Object.defineProperty(exports, '__esModule', { value: true });

})(this.VueUse = this.VueUse || {}, Fuse, VueDemi);
